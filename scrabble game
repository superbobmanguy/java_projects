import java.util.*;
public class boardgame {
	static char[] alphabet = {'A', 'B', 'C', 'D', 'E', 'F',
								'G', 'H', 'I', 'J', 'K', 'L', 'M',
								'N', 'O', 'P', 'Q', 'R', 'S',
								'T', 'U', 'V', 'W', 'X', 'Y', 'Z'};
	static int[][] mod = {{1, 4, 8, 12, 15, 2, 6, 10, 14, 3, 7, 9, 13, 1, 4, 8, 12, 15, 5, 11,
							2, 6, 10, 14, 3, 7, 9, 13, 1, 4, 12, 15, 3, 7, 9, 13, 2, 6, 10, 14,
							5, 11, 1, 4, 8, 12, 15, 3, 7, 9, 13, 2, 6, 10, 14, 1, 4, 8, 12, 15},
							{1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 6, 6,
							6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 11, 11,
							12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 15},
							{4, 1, 4, 1, 4, 3, 2, 2, 3, 3, 1, 1, 3, 1, 3, 1, 3, 1, 3, 3, 2, 2, 2, 2,
							1, 1, 1, 1, 4, 1, 1, 4, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 1, 3, 1, 3, 1,
							3, 1, 1, 3, 3, 2, 2, 3, 4, 1, 4, 1, 4}};
	public static void main(String[] args) {
		//String pie = "apple";
		//char bacon = 'c';
		//pie = bacon + pie;
		//System.out.println(pie);
		
		boolean skip = false;
		
		char robot = ' ';
		char first1 = ' ';
		char first2 = ' ';
		int num1 = -1;
		int num2 = -1;
		int rando = 0;
		int banksize = 0;
		char[] bank = new char[100];
		boolean play = true;
		boolean playerturn = true;
		boolean setup = true;
		boolean endgame = false;
		String dump = "";
		
		char[] player1letters = {'#', '#', '#', '#', '#', '#', '#'};
		char[] player2letters = {'#', '#', '#', '#', '#', '#', '#'};
		
		Scanner scan = new Scanner(System.in);
		
		char[][] letters = new char[15][15];
		String[][] scrbrd = new String[33][33];
		
		bankfill(bank);
		prefill(letters, robot);
		//printarray(letters);
		fillbig(letters, scrbrd);
		//printarray(scrbrd);
		//printbank(bank);
		
		banksize = bank.length;
		
		//while(setup = true) {
			rando = (int)(Math.random()*banksize);
			first1 = bank[rando];
			rando = (int)(Math.random()*banksize);
			first2 = bank[rando];
			
			if(first1 == ' ') {
				first1 = '_';
			}
			if(first2 == ' ') {
				first2 = '_';
			}
		
			for(int i = 0; i < 26; i++) {
				if(first1 == alphabet[i]) {
					num1 = i;
				}
			}
			for(int i = 0; i < 26; i++) {
				if(first2 == alphabet[i]) {
					num2 = i;
				}
			}
			if(num1 <= num2) {
				playerturn = true;
				setup = false;
			}
			else if(num2 < num1) {
				playerturn = false;
				setup = false;
			}
			//else {
			//	setup = false;
			//}
		//}
		
		System.out.println("Player 1 got a: " + first1);
		System.out.println("Player 2 got a: " + first2);
		System.out.println("");
		if(playerturn == true) {
			System.out.println("Player 1 goes first.");
		}
		else {
			System.out.println("Player 2 goes first.");
		}
		System.out.println("");
		System.out.println("Press enter to start.");
		
		dump = scan.nextLine();
		
		banksize = addletters(player1letters, bank, banksize);
		banksize = addletters(player2letters, bank, banksize);
		
		while(play) {
			
			printbar(player1letters);
			printbank(bank);
			
			play = false;
			
			if(bank[0] == '_') {
				endgame = true;
				for(int i = 0; i < player1letters.length; i++) {
					if((player1letters[i] != '#')||(player2letters[i] != '#')) {
						endgame = false;
					}
				}
			}
			if(endgame) {
				play = false;
			}
		}
		
		System.out.println("the end");
	}
	
	public static void prefill(char[][] letters, char robot) {
		for(int i = 0; i < 15; i++) {
			for(int j = 0; j < 15; j++) {
				letters[i][j] = robot;
			}
		}
		
	}
	public static void printarray(char[][] thearray) {
		for(int i = 0; i < 15; i++) {
			for(int j = 0; j < 15; j++) {
				System.out.print(thearray[i][j] + " ");
			}
			System.out.println("");
		}
	}
	public static void printarray(String[][] thearray) {
		for(int i = 0; i < 33; i++) {
			for(int j = 0; j < 33; j++) {
				System.out.print(thearray[i][j] + "");
			}
			System.out.println("");
		}
	}
	public static void printbank(char[] bank) {
		for(int i = 0; i < 99; i++) {
			if((i == 24)||(i == 49)||(i == 74)||(i == 99)) {
				System.out.println(bank[i]);
			}
			else {
				System.out.print(bank[i]);
			}
		}
	}
	public static int addletters(char[] playerletters, char[] bank, int banksize) {
		int rando = 0;
		for(int i = 0; i < playerletters.length; i++) {
			if(playerletters[i] == '#') {
				rando = (int)(Math.random()*banksize);
				playerletters[i] = bank[rando];
				for(int j = rando; j < banksize; j++) {
					if(j == 99) {
						bank[j] = '_';
					}
					else {
						bank[j] = bank[j + 1];
					}
				}
				banksize -= 1;
			}
		}
		return banksize;
	}
	
	public static void printbar(char[] playerletters) {
		System.out.print("Your letters: ");
		for(int i = 0; i < playerletters.length; i++) {
			System.out.print("" + playerletters[i]);
			if(i < (playerletters.length - 1)) {
				System.out.print(", ");
			}
		}
		System.out.println("");
	}
	
	public static void enterletters(char[] playerletters, char[][] letters, boolean skip) {
		Scanner scan = new Scanner(System.in);
		printbar(playerletters);
		boolean work1 = true;
		boolean work2 = true;
		boolean work3 = true;
		boolean work4 = true;
		boolean work5 = true;
		boolean restart = false;
		boolean hasletter = false;
		String addedword = "";
		int vert = 0;
		char hori = ' ';
		int x = 0;
		int y = 0;
		String direct = "";
		
		int[] lettermulti = new int[15];
		for(int i = 0; i < lettermulti.length; i++) {
			lettermulti[i] = 1;
		}
		int multi = 1;
		
		boolean[] checkletter = new boolean[15];
		for(int i = 0; i < checkletter.length; i++) {
			checkletter[i] = false;
		}
		
		while(work1) {
			work2 = true;
			work3 = true;
			work4 = true;
			work5 = true;
			while(work2) {
				System.out.println("What word do you want to add: ");
				addedword = scan.nextLine();
				if(addedword.length() <= 15) {
					work2 = false;
				}
				else {
					System.out.println("Word is too big.");
				}
			}
		
			System.out.println("Where is the first letter going to be?");
			while(work3) {
				System.out.println("Horizontally: ");
				hori = scan.next().charAt(0);
				for(int i = 0; i < 15; i++) {
					if(hori == alphabet[i]) {
						work3 = false;
						x = i;
					}
				}
				if(work3) {
					System.out.println("Not a spot on the board.");
					System.out.println("Where is the first letter going to be?");
				}
			}
			while(work4) {
				System.out.println("Vertically: ");
				vert = scan.nextInt();
				if((vert <= 15)&&(vert >= 1)) {
					y = vert - 1;
					work4 = false;
				}
				if(work4) {
					System.out.println("Not a spot on the board.");
					System.out.println("Where is the first letter going to be?");
				}
			}
			
			while(work5) {
				System.out.println("What direction is the word going: ");
				direct = scan.nextLine();
				if((direct.equalsIgnoreCase("up"))||(direct.equalsIgnoreCase("down"))||
					(direct.equalsIgnoreCase("left"))||(direct.equalsIgnoreCase("right"))) {
					work5 = false;
				}
				if(work5) {
					System.out.println("Not a direction.");
				}
			}
		
			if(direct.equalsIgnoreCase("up")) {
				for(int i = 0; i < addedword.length(); i++) {
					if(letters[y - i][x] == ' ') {
						hasletter = false;
						for(int j = 0; j < playerletters.length; j++) {
							if(playerletters[j] == addedword.charAt(i)) {
								hasletter = true;
								playerletters[j] = '#';
								break;
							}
						}
						if(hasletter) {
							letters[y - i][x] = addedword.charAt(i);
							checkletter[i] = true;
						}
						else {
							for(int j = 0; j < i; j++) {
								if(checkletter[j]) {
									for(int k = 0; k < playerletters.length; k++) {
										if(playerletters[k] == '#') {
											playerletters[k] = letters[y - j][x];
											break;
										}
									}
									letters[y - j][x] = ' ';
									checkletter[j] = false;
								}
							}
							restart = true;
							System.out.println("Don't have letters.");
							break;
						}
					}
					else if(letters[y - i][x] == addedword.charAt(i)) {
						
					}
					else {
						for(int j = 0; j < i; j++) {
							if(checkletter[j]) {
								letters[y - j][x] = ' ';
								checkletter[j] = false;
							}
						}
						restart = true;
						System.out.println("Word doesn't fit.");
						break;
					}
				}
			}
			else if(direct.equalsIgnoreCase("down")) {
				for(int i = 0; i < addedword.length(); i++) {
					if(letters[y + i][x] == ' ') {
						hasletter = false;
						for(int j = 0; j < playerletters.length; j++) {
							if(playerletters[j] == addedword.charAt(i)) {
								hasletter = true;
								playerletters[j] = '#';
								break;
							}
						}
						if(hasletter) {
							letters[y + i][x] = addedword.charAt(i);
							checkletter[i] = true;
						}
						else {
							for(int j = 0; j < i; j++) {
								if(checkletter[j]) {
									for(int k = 0; k < playerletters.length; k++) {
										if(playerletters[k] == '#') {
											playerletters[k] = letters[y + j][x];
											break;
										}
									}
									letters[y + j][x] = ' ';
									checkletter[j] = false;
								}
							}
							restart = true;
							System.out.println("Don't have letters.");
							break;
						}
					}
					else if(letters[y + i][x] == addedword.charAt(i)) {
						
						int themod = 0;
						for(int l = 0; l < mod.length; l++) {
							if(((y + i) == mod[l][0])&&(x == mod[l][1])) {
								themod = mod[l][2];
							}
						}
					}
					else {
						for(int j = 0; j < i; j++) {
							if(checkletter[j]) {
								letters[y + j][x] = ' ';
								checkletter[j] = false;
							}
						}
						restart = true;
						System.out.println("Word doesn't fit.");
						break;
					}
				}
			}
			else if(direct.equalsIgnoreCase("left")) {
				for(int i = 0; i < addedword.length(); i++) {
					if(letters[y][x - i] == ' ') {
						hasletter = false;
						for(int j = 0; j < playerletters.length; j++) {
							if(playerletters[j] == addedword.charAt(i)) {
								hasletter = true;
								playerletters[j] = '#';
								break;
							}
						}
						if(hasletter) {
							letters[y][x - i] = addedword.charAt(i);
							checkletter[i] = true;
						}
						else {
							for(int j = 0; j < i; j++) {
								if(checkletter[j]) {
									for(int k = 0; k < playerletters.length; k++) {
										if(playerletters[k] == '#') {
											playerletters[k] = letters[y][x - j];
											break;
										}
									}
									letters[y][x - j] = ' ';
									checkletter[j] = false;
								}
							}
							restart = true;
							System.out.println("Don't have letters.");
							break;
						}
					}
					else if(letters[y][x - i] == addedword.charAt(i)) {
						
					}
					else {
						for(int j = 0; j < i; j++) {
							if(checkletter[j]) {
								letters[y][x - j] = ' ';
								checkletter[j] = false;
							}
						}
						restart = true;
						System.out.println("Word doesn't fit.");
						break;
					}
				}
			}
			else if(direct.equalsIgnoreCase("right")) {
				for(int i = 0; i < addedword.length(); i++) {
					if(letters[y][x + i] == ' ') {
						hasletter = false;
						for(int j = 0; j < playerletters.length; j++) {
							if(playerletters[j] == addedword.charAt(i)) {
								hasletter = true;
								playerletters[j] = '#';
								break;
							}
						}
						if(hasletter) {
							letters[y][x + i] = addedword.charAt(i);
							checkletter[i] = true;
						}
						else {
							for(int j = 0; j < i; j++) {
								if(checkletter[j]) {
									for(int k = 0; k < playerletters.length; k++) {
										if(playerletters[k] == '#') {
											playerletters[k] = letters[y][x + j];
											break;
										}
									}
									letters[y][x + j] = ' ';
									checkletter[j] = false;
								}
							}
							restart = true;
							System.out.println("Don't have letters.");
							break;
						}
					}
					else if(letters[y][x + i] == addedword.charAt(i)) {
						
					}
					else {
						for(int j = 0; j < i; j++) {
							if(checkletter[j]) {
								letters[y][x + j] = ' ';
								checkletter[j] = false;
							}
						}
						restart = true;
						System.out.println("Word doesn't fit.");
						break;
					}
				}
			}
			boolean wordworks = false;
			for(int i = 0; i < addedword.length(); i++) {
				if(checkletter[i] == false) {
					wordworks = true;
				}
			}
			
			if(direct.equalsIgnoreCase("down")) {
				for(int i = 0; i < addedword.length(); i++) {
					if(letters[y + i][x - 1] != ' ') {
						wordworks = true;
					}
					else if(letters[y + i][x + 1] != ' ') {
						wordworks = true;
					}
				}
				if(letters[y - 1][x] != ' ') {
					wordworks = true;
				}
				else {
					//code for putting letterscore into turnscore
				}
				if(letters[y + addedword.length()][x] != ' ') {
					wordworks = true;
				}
			}
			else if(direct.equalsIgnoreCase("right")) {
				for(int i = 0; i < addedword.length(); i++) {
					if(letters[y - 1][x + i] != ' ') {
						wordworks = true;
					}
					else if(letters[y + 1][x + i] != ' ') {
						wordworks = true;
					}
				}
				
			}
			
			
			
			String exword1 = "#";
			String exword2 = "#";
			String exword3 = "#";
			String exword4 = "#";
			String exword5 = "#";
			String exword6 = "#";
			String exword7 = "#";
			String exword8 = "#";
			int mod1 = 0;
			int mod2 = 0;
			int mod3 = 0;
			int mod4 = 0;
			int mod5 = 0;
			int mod6 = 0;
			int mod7 = 0;
			int mod8 = 0;
			int wordscore1 = 0;
			int wordscore2 = 0;
			int wordscore3 = 0;
			int wordscore4 = 0;
			int wordscore5 = 0;
			int wordscore6 = 0;
			int wordscore7 = 0;
			int wordscore8 = 0;
			if(direct.equalsIgnoreCase("down")) {
				for(int i = 0; i < addedword.length(); i++) {
					if(checkletter[i] == false) {
						if(letters[y + i][x - 1] != ' ') {
							if(exword1.equalsIgnoreCase("#")) {
								exword1 = "";
								//set themod and letterscore to zero here
								for(int j = 0; j < 15; j++) {
									if(letters[y + i][x - j] != ' ') {
										exword1 = letters[y + i][x - j] + exword1;
										//put score code here;
										//use letters location for letter to score
										
									}
									else {
										break;
									}
								}
								//add any finishing multiplyers to score here
								//add dump into turn score here
							}
							else if(exword2.equalsIgnoreCase("#")) {
								exword2 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + i][x - j] != ' ') {
										exword2 = letters[y + i][x - j] + exword2;
									}
									else {
										break;
									}
								}
							}
							else if(exword3.equalsIgnoreCase("#")) {
								exword3 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + i][x - j] != ' ') {
										exword3 =letters[y + i][x - j] + exword3;
									}
									else {
										break;
									}
								}
							}
							else if(exword4.equalsIgnoreCase("#")) {
								exword4 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + i][x - j] != ' ') {
										exword4 = letters[y + i][x - j] + exword4;
									}
									else {
										break;
									}
								}
							}
							else if(exword5.equalsIgnoreCase("#")) {
								exword5 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + i][x - j] != ' ') {
										exword5 = letters[y + i][x - j]  + exword5;
									}
									else {
										break;
									}
								}
							}
							else if(exword6.equalsIgnoreCase("#")) {
								exword6 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + i][x - j] != ' ') {
										exword6 =letters[y + i][x - j] + exword6;
									}
									else {
										break;
									}
								}
							}
							else if(exword7.equalsIgnoreCase("#")) {
								exword7 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + i][x - j] != ' ') {
										exword7 = letters[y + i][x - j] + exword7;
									}
									else {
										break;
									}
								}
							}
						}
						else if(letters[y + i][x + 1] != ' ') {
							if(exword1.equalsIgnoreCase("#")) {
								exword1 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + i][x + j] != ' ') {
										exword1 += letters[y + i][x + j];
									}
									else {
										break;
									}
								}
							}
							else if(exword2.equalsIgnoreCase("#")) {
								exword2 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + i][x + j] != ' ') {
										exword2 += letters[y + i][x + j];
									}
									else {
										break;
									}
								}
							}
							else if(exword3.equalsIgnoreCase("#")) {
								exword3 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + i][x + j] != ' ') {
										exword3 += letters[y + i][x + j];
									}
									else {
										break;
									}
								}
							}
							else if(exword4.equalsIgnoreCase("#")) {
								exword4 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + i][x + j] != ' ') {
										exword4 += letters[y + i][x + j];
									}
									else {
										break;
									}
								}
							}
							else if(exword5.equalsIgnoreCase("#")) {
								exword5 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + i][x + j] != ' ') {
										exword5 += letters[y + i][x + j];
									}
									else {
										break;
									}
								}
							}
							else if(exword6.equalsIgnoreCase("#")) {
								exword6 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + i][x + j] != ' ') {
										exword6 += letters[y + i][x + j];
									}
									else {
										break;
									}
								}
							}
							else if(exword7.equalsIgnoreCase("#")) {
								exword7 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + i][x + j] != ' ') {
										exword7 += letters[y + i][x + j];
									}
									else {
										break;
									}
								}
							}
						}
					}
				}
				if(letters[y - 1][x] != ' ') {
					exword8 = "";
					for(int j = 0; j < 15; j++) {
						if(letters[y + addedword.length() - j][x] != ' ') {
							exword8 = letters[y + addedword.length() - j][x] + exword8;
						}
						else {
							break;
						}
					}
				}
				else if(letters[y + addedword.length()][x] != ' ') {
					exword8 = "";
					for(int j = 0; j < 15; j++) {
						if(letters[y + j][x] != ' ') {
							exword8 += letters[y + j][x];
						}
						else {
							break;
						}
					}
				}
			}
			else if(direct.equalsIgnoreCase("right")) {
				for(int i = 0; i < addedword.length(); i++) {
					if(checkletter[i] == false) {
						if(letters[y - 1][x + i] != ' ') {
							if(exword1.equalsIgnoreCase("#")) {
								exword1 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y - j][x + i] != ' ') {
										exword1 = letters[y - j][x + i] + exword1;
									}
									else {
										break;
									}
								}
							}
							else if(exword2.equalsIgnoreCase("#")) {
								exword2 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y - j][x + i] != ' ') {
										exword2 = letters[y - j][x + i] + exword2;
									}
									else {
										break;
									}
								}
							}
							else if(exword3.equalsIgnoreCase("#")) {
								exword3 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y - j][x + i] != ' ') {
										exword3 =letters[y - j][x + i] + exword3;
									}
									else {
										break;
									}
								}
							}
							else if(exword4.equalsIgnoreCase("#")) {
								exword4 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y - j][x + i] != ' ') {
										exword4 = letters[y - j][x + i] + exword4;
									}
									else {
										break;
									}
								}
							}
							else if(exword5.equalsIgnoreCase("#")) {
								exword5 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y - j][x + i] != ' ') {
										exword5 = letters[y - j][x + i]  + exword5;
									}
									else {
										break;
									}
								}
							}
							else if(exword6.equalsIgnoreCase("#")) {
								exword6 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y - j][x + i] != ' ') {
										exword6 =letters[y - j][x + i] + exword6;
									}
									else {
										break;
									}
								}
							}
							else if(exword7.equalsIgnoreCase("#")) {
								exword7 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y - j][x + i] != ' ') {
										exword7 = letters[y - j][x + i] + exword7;
									}
									else {
										break;
									}
								}
							}
						}
						else if(letters[y + 1][x + i] != ' ') {
							if(exword1.equalsIgnoreCase("#")) {
								exword1 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + j][x + i] != ' ') {
										exword1 += letters[y + j][x + i];
									}
									else {
										break;
									}
								}
							}
							else if(exword2.equalsIgnoreCase("#")) {
								exword2 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + j][x + i] != ' ') {
										exword2 += letters[y + j][x + i];
									}
									else {
										break;
									}
								}
							}
							else if(exword3.equalsIgnoreCase("#")) {
								exword3 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + j][x + i] != ' ') {
										exword3 += letters[y + j][x + i];
									}
									else {
										break;
									}
								}
							}
							else if(exword4.equalsIgnoreCase("#")) {
								exword4 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + j][x + i] != ' ') {
										exword4 += letters[y + j][x + i];
									}
									else {
										break;
									}
								}
							}
							else if(exword5.equalsIgnoreCase("#")) {
								exword5 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + j][x + i] != ' ') {
										exword5 += letters[y + j][x + i];
									}
									else {
										break;
									}
								}
							}
							else if(exword6.equalsIgnoreCase("#")) {
								exword6 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + j][x + i] != ' ') {
										exword6 += letters[y + j][x + i];
									}
									else {
										break;
									}
								}
							}
							else if(exword7.equalsIgnoreCase("#")) {
								exword7 = "";
								for(int j = 0; j < 15; j++) {
									if(letters[y + j][x + i] != ' ') {
										exword7 += letters[y + j][x + i];
									}
									else {
										break;
									}
								}
							}
						}
					}
				}
				if(letters[y][x - 1] != ' ') {
					exword8 = "";
					for(int j = 0; j < 15; j++) {
						if(letters[y][x + addedword.length() - j] != ' ') {
							exword8 = letters[y][x + addedword.length() - j] + exword8;
						}
						else {
							break;
						}
					}
				}
				else if(letters[y][x + addedword.length()] != ' ') {
					exword8 = "";
					for(int j = 0; j < 15; j++) {
						if(letters[y][x + j] != ' ') {
							exword8 += letters[y][x + j];
						}
						else {
							break;
						}
					}
				}
			}
			
			if(wordworks == false) {
				restart = true;
				System.out.println("Word doesn't connect.");
			}
			
			if(restart) {
				continue;
			}
			else {
				work1 = false;
			}
		}
		
		boolean yn = true;
		String chal = "";
		
		while(yn) {
			System.out.println("Would your opponent like to challenge you: ");
			chal = scan.nextLine();
			if((chal.equalsIgnoreCase("yes"))||(chal.equalsIgnoreCase("no"))) {
				yn = false;
			}
			if(yn) {
				System.out.println("Not an appropriate answer");
			}
		}
		
		if(chal.equalsIgnoreCase("yes")) {
			//put challenge code here
		}
	}
	
	public static void bankfill(char[] bank) { 
		for(int i = 0; i < 100; i++) {
			if(i <= 1) {
				bank[i] = ' ';
			}
			else if(i <= 13) {
				bank[i] = 'E';
			}
			else if(i <= 22) {
				bank[i] = 'A';
			}
			else if(i <= 31) {
				bank[i] = 'I';
			}
			else if(i <= 39) {
				bank[i] = 'O';
			}
			else if(i <= 45) {
				bank[i] = 'N';
			}
			else if(i <= 51) {
				bank[i] = 'R';
			}
			else if(i <= 57) {
				bank[i] = 'T';
			}
			else if(i <= 61) {
				bank[i] = 'L';
			}
			else if(i <= 65) {
				bank[i] = 'S';
			}
			else if(i <= 69) {
				bank[i] = 'U';
			}
			else if(i <= 73) {
				bank[i] = 'D';
			}
			else if(i <= 76) {
				bank[i] = 'G';
			}
			else if(i <= 78) {
				bank[i] = 'B';
			}
			else if(i <= 80) {
				bank[i] = 'C';
			}
			else if(i <= 82) {
				bank[i] = 'M';
			}
			else if(i <= 84) {
				bank[i] = 'P';
			}
			else if(i <= 86) {
				bank[i] = 'F';
			}
			else if(i <= 88) {
				bank[i] = 'H';
			}
			else if(i <= 90) {
				bank[i] = 'V';
			}
			else if(i <= 92) {
				bank[i] = 'W';
			}
			else if(i <= 94) {
				bank[i] = 'Y';
			}
			else if(i <= 95) {
				bank[i] = 'K';
			}
			else if(i <= 96) {
				bank[i] = 'J';
			}
			else if(i <= 97) {
				bank[i] = 'X';
			}
			else if(i <= 98) {
				bank[i] = 'Q';
			}
			else if(i <= 99) {
				bank[i] = 'Z';
			}
			else {
				bank[i] = '#';
			}
		}
	}
	public static void fillbig(char[][] letters, String[][] scrbrd) {
		int k = 0;
		int l = 0;
		int h = 0;
		for(int i = 0; i < 33; i++) {
			for(int j = 0; j < 33; j++) {
				//scrbrd[i][j] = i + " " + j + "  ";
				l = i % 2;
				if(l == 0) {
					k = j % 2;
					if(k == 0) {
						scrbrd[i][j] = "O";
					}
					else {
						scrbrd[i][j] = "---";
					}
				}
				else if(i == 1) {
					k = j % 2;
					if(k == 0) {
						scrbrd[i][j] = "|";
					}
					else if(j == 1) {
						scrbrd[i][j] = " # ";
					}
					else if(j <= 31) {
						scrbrd[i][j] = " " + alphabet[((j - 1)/2) - 1] + " ";
					}
				}
				//else if(i == 1) {
				//	if( j <= 1) {
				//		scrbrd[i][j] = "   ";
				//	}
				//	else {
				//		scrbrd[i][j] = "---";
				//	}
				//}
				else {
					k = j % 2;
					if(k == 0) {
						scrbrd[i][j] = "|";
					}
					else if(j == 1) {
						h = (i - 1)/2;
						if(h <= 9) {
							scrbrd[i][j] = "  " + (h);
						}
						else {
							scrbrd[i][j] = " " + (h);
						}
					}
					else {
						if(i == 3) {
							if((j == 3)||(j == 17)||(j == 31)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "3W";
							}
							else if((j == 9)||(j == 25)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "2L";
							}
							else {
								scrbrd[i][j] = " " + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + " ";
							}
						}
						else if(i == 5) {
							if((j == 5)||(j == 29)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "2W";
							}
							else if((j == 13)||(j == 21)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "3L";
							}
							else {
								scrbrd[i][j] = " " + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + " ";
							}
						}
						else if(i == 7) {
							if((j == 7)||(j == 27)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "2W";
							}
							else if((j == 15)||(j == 19)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "2L";
							}
							else {
								scrbrd[i][j] = " " + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + " ";
							}
						}
						else if(i == 9) {
							if((j == 9)||(j == 25)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "2W";
							}
							else if((j == 3)||(j == 17)||(j == 31)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "2L";
							}
							else {
								scrbrd[i][j] = " " + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + " ";
							}
						}
						else if(i == 11) {
							if((j == 11)||(j == 23)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "2W";
							}
							else {
								scrbrd[i][j] = " " + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + " ";
							}
						}
						else if(i == 13) {
							if((j == 5)||(j == 13)||(j == 21)||(j == 29)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "3L";
							}
							else {
								scrbrd[i][j] = " " + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + " ";
							}
						}
						else if(i == 15) {
							if((j == 7)||(j == 15)||(j == 19)||(j == 27)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "2L";
							}
							else {
								scrbrd[i][j] = " " + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + " ";
							}
						}
						else if(i == 17) {
							if((j == 3)||(j == 31)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "3W";
							}
							else if((j == 9)||(j == 25)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "2L";
							}
							else if(j == 17) {
								scrbrd[i][j] = "*" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "*";
							}
							else {
								scrbrd[i][j] = " " + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + " ";
							}
						}
						else if(i == 19) {
							if((j == 7)||(j == 15)||(j == 19)||(j == 27)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "2L";
							}
							else {
								scrbrd[i][j] = " " + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + " ";
							}
						}
						else if(i == 21) {
							if((j == 5)||(j == 13)||(j == 21)||(j == 29)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "3L";
							}
							else {
								scrbrd[i][j] = " " + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + " ";
							}
						}
						else if(i == 23) {
							if((j == 11)||(j == 23)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "2W";
							}
							else {
								scrbrd[i][j] = " " + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + " ";
							}
						}
						else if(i == 25) {
							if((j == 9)||(j == 25)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "2W";
							}
							else if((j == 3)||(j == 17)||(j == 31)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "2L";
							}
							else {
								scrbrd[i][j] = " " + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + " ";
							}
						}
						else if(i == 27) {
							if((j == 7)||(j == 27)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "2W";
							}
							else if((j == 15)||(j == 19)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "2L";
							}
							else {
								scrbrd[i][j] = " " + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + " ";
							}
						}
						else if(i == 29) {
							if((j == 5)||(j == 29)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "2W";
							}
							else if((j == 13)||(j == 21)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "3L";
							}
							else {
								scrbrd[i][j] = " " + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + " ";
							}
						}
						else if(i == 31) {
							if((j == 3)||(j == 17)||(j == 31)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "3W";
							}
							else if((j == 9)||(j == 25)) {
								scrbrd[i][j] = "" + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + "2L";
							}
							else {
								scrbrd[i][j] = " " + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + " ";
							}
						}
						else {
							scrbrd[i][j] = " " + letters[((i - 1)/2) - 1][((j - 1)/2) - 1] + " ";
						}
					}
				}
			}
		}
		
	}
}
