import java.util.*;
import java.io.*;
public class knight {
	private static int board[][];
	private static int row;
	private static int col;
	private static int fin;
	//gets the board dimensions and starting point
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		System.out.println("Enter the number of rows: ");
		row = scan.nextInt();
		System.out.println("Enter the number of colloms: ");
		col = scan.nextInt();
		
		board = new int[row][col];
		setrow(0);
		
		System.out.println("Enter the starting row: ");
		int startx = scan.nextInt();
		System.out.println("Enter the starting collom: ");
		int starty = scan.nextInt();
		
		fin = row * col;
		
		boolean solve = move(startx, starty, 1);
		
		if(solve) {
			showrow(0);
		}
		else {
			System.out.println("Can't solve board.");
		}
	}
	//sets up the board
	public static void setrow(int n) {
		if(n < row) {
			setcol(n, 0);
			setrow(n + 1);
		}
	}
	public static void setcol(int n, int m) {
		if(m < col) {
			board[n][m] = 0;
			setcol(n, m + 1);
		}
	}
	//prints the board
	public static void showrow(int n) {
		if(n < row) {
			showcol(n, 0);
			System.out.println();
			showrow(n + 1);
		}
	}
	public static void showcol(int n, int m) {
		if(m < col) {
			if(board[n][m] < 10) {
				System.out.print(" ");
			}
			System.out.print(board[n][m] + " ");
			showcol(n, m + 1);
		}
	}
	//moves the knight
	public static boolean move(int x, int y, int n) {
		if((x < 0)||(x >= row)||(y < 0)||(y >= col)) {
			return false;
		}
		else if(board[x][y] != 0) {
			return false;
		}
		else if(n == fin) {
			board[x][y] = n;
			return true;
		}
		else {
			board[x][y] = n;
			if(move(x + 1, y + 2, n + 1)||move(x + 1, y - 2, n + 1)||move(x - 1, y + 2, n + 1)||move(x - 1, y - 2, n + 1)||
					move(x + 2, y + 1, n + 1)||move(x + 2, y - 1, n + 1)||move(x - 2, y + 1, n + 1)||move(x - 2, y - 1, n + 1)) {
				return true;
			}
			else {
				board[x][y] = 0;
				return false;
			}
		}
	}
}
